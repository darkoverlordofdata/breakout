/**
 * Entitas Generated Classes for breakout
 *
 * do not edit this file
 */
module breakout {
  "use strict";

  import Pool = entitas.Pool;
  import Entity = entitas.Entity;
  import Matcher = entitas.Matcher;
  import ISystem = entitas.ISystem;
  import IMatcher = entitas.IMatcher;
  import IComponent = entitas.IComponent;

  export enum CoreComponentIds {
    Animation,
    Body,
    Sprite,
    Stats,
    Ball,
    Block,
    Counter,
    Paddle,
    Player,
    WallLeft,
    WallRight,
    WallTop,
    Destroy,
    TotalComponents
  }

  entitas.Entity.initialize(CoreComponentIds.TotalComponents, {"entities":128,"components":64});


  export class AnimationComponent implements IComponent {
    public animation:any;
  }
  export class BodyComponent implements IComponent {
    public body:any;
  }
  export class SpriteComponent implements IComponent {
    public object:any;
  }
  export class StatsComponent implements IComponent {
    public lives:number;
    public score:number;
    public level:number;
  }
  export class BallComponent implements IComponent {
  }
  export class BlockComponent implements IComponent {
  }
  export class CounterComponent implements IComponent {
  }
  export class PaddleComponent implements IComponent {
  }
  export class PlayerComponent implements IComponent {
  }
  export class WallLeftComponent implements IComponent {
  }
  export class WallRightComponent implements IComponent {
  }
  export class WallTopComponent implements IComponent {
  }
  export class DestroyComponent implements IComponent {
  }


  export class Pools {
    
    static _allPools:Array<Pool>;
    
    static get allPools():Array<Pool> {
      if (Pools._allPools == null) {
        Pools._allPools = [Pools.pool];
      }
      return Pools._allPools;
    }
    
    static _pool:Pool;
    
    static get pool():Pool {
      if (Pools._pool == null) {
        Pools._pool = new Pool(CoreComponentIds, CoreComponentIds.TotalComponents);
        entitas.viewer.VisualDebugging.init(Pools._pool);
      }
    
      return Pools._pool;
    }
  }
}